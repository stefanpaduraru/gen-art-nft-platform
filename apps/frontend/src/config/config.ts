import dotenv from "dotenv";
const dotEnvPath = `.env.${process.env.NODE_ENV || "development"}`;
dotenv.config({ path: dotEnvPath });

const REQUIRED_KEYS = [
  "REACT_APP_WEB3_PROVIDER_MAINNET",
  "REACT_APP_WEB3_NETWORK_MAINNET",
  "REACT_APP_WEB3_CHAIN_ID_MAINNET",

  "REACT_APP_WEB3_PROVIDER_TESTNET",
  "REACT_APP_WEB3_NETWORK_TESTNET",
  "REACT_APP_WEB3_CHAIN_ID_TESTNET",

  "REACT_APP_BE_URL",
  "REACT_APP_API_URL",
  "REACT_APP_FRONT_CLIENT_URL",

  "REACT_APP_GA_ID",
  "REACT_APP_RECAPTCHA_KEY",
];

REQUIRED_KEYS.forEach((key) => {
  if (!(key in process.env)) {
    throw new Error(`Missing required config key: ${key}`);
  }
});

const {
  REACT_APP_WEB3_PROVIDER_MAINNET,
  REACT_APP_WEB3_NETWORK_MAINNET,
  REACT_APP_WEB3_CHAIN_ID_MAINNET,

  REACT_APP_WEB3_PROVIDER_TESTNET,
  REACT_APP_WEB3_NETWORK_TESTNET,
  REACT_APP_WEB3_CHAIN_ID_TESTNET,

  REACT_APP_BE_URL,
  REACT_APP_API_URL,
  REACT_APP_FRONT_CLIENT_URL,

  REACT_APP_MAX_NUMBER_OF_PROJECTS,
  REACT_APP_RECAPTCHA_KEY,
  REACT_APP_GA_ID,
} = process.env;

const config = {
  WEB3_PROVIDER_MAINNET: REACT_APP_WEB3_PROVIDER_MAINNET,
  WEB3_NETWORK_MAINNET: REACT_APP_WEB3_NETWORK_MAINNET,
  WEB3_CHAIN_ID_MAINNET: REACT_APP_WEB3_CHAIN_ID_MAINNET,

  WEB3_PROVIDER_TESTNET: REACT_APP_WEB3_PROVIDER_TESTNET,
  WEB3_NETWORK_TESTNET: REACT_APP_WEB3_NETWORK_TESTNET,
  WEB3_CHAIN_ID_TESTNET: REACT_APP_WEB3_CHAIN_ID_TESTNET,

  BE_URL: REACT_APP_BE_URL || "",
  API_URL: REACT_APP_API_URL || "",
  FRONT_CLIENT_URL: REACT_APP_FRONT_CLIENT_URL || "",

  GA_ID: REACT_APP_GA_ID || "",
  MAX_NUMBER_OF_PROJECTS: REACT_APP_MAX_NUMBER_OF_PROJECTS || "",
  RECAPTCHA_KEY: REACT_APP_RECAPTCHA_KEY || "",
};
export default config;
